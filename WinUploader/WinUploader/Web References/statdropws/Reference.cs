//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace WinUploader.statdropws {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DeveloperAPISoap", Namespace="http://tempuri.org/")]
    public partial class DeveloperAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ValidateAPIKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWindowAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGenericAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDetailedStatOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExactStatUpdateForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementStatUpdateForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrophyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnLatestWebServiceVersionAndEndPointOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUserEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUserMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DeveloperAPI() {
            this.Url = global::WinUploader.Properties.Settings.Default.WinUploader_statdropws_DeveloperAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ValidateAPIKeyCompletedEventHandler ValidateAPIKeyCompleted;
        
        /// <remarks/>
        public event CreateWindowAppCompletedEventHandler CreateWindowAppCompleted;
        
        /// <remarks/>
        public event CreateGenericAppCompletedEventHandler CreateGenericAppCompleted;
        
        /// <remarks/>
        public event CreateDetailedStatCompletedEventHandler CreateDetailedStatCompleted;
        
        /// <remarks/>
        public event ExactStatUpdateForUserCompletedEventHandler ExactStatUpdateForUserCompleted;
        
        /// <remarks/>
        public event IncrementStatUpdateForUserCompletedEventHandler IncrementStatUpdateForUserCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event AddTrophyCompletedEventHandler AddTrophyCompleted;
        
        /// <remarks/>
        public event ReturnLatestWebServiceVersionAndEndPointCompletedEventHandler ReturnLatestWebServiceVersionAndEndPointCompleted;
        
        /// <remarks/>
        public event SendUserEmailCompletedEventHandler SendUserEmailCompleted;
        
        /// <remarks/>
        public event SendUserMessageCompletedEventHandler SendUserMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAPIKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateAPIKey(string APIKey) {
            object[] results = this.Invoke("ValidateAPIKey", new object[] {
                        APIKey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAPIKeyAsync(string APIKey) {
            this.ValidateAPIKeyAsync(APIKey, null);
        }
        
        /// <remarks/>
        public void ValidateAPIKeyAsync(string APIKey, object userState) {
            if ((this.ValidateAPIKeyOperationCompleted == null)) {
                this.ValidateAPIKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAPIKeyOperationCompleted);
            }
            this.InvokeAsync("ValidateAPIKey", new object[] {
                        APIKey}, this.ValidateAPIKeyOperationCompleted, userState);
        }
        
        private void OnValidateAPIKeyOperationCompleted(object arg) {
            if ((this.ValidateAPIKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAPIKeyCompleted(this, new ValidateAPIKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateWindowApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateWindowApp(string APIKey, string Signature, int TypeID, string LongDescription, string MoreInformationURL) {
            object[] results = this.Invoke("CreateWindowApp", new object[] {
                        APIKey,
                        Signature,
                        TypeID,
                        LongDescription,
                        MoreInformationURL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWindowAppAsync(string APIKey, string Signature, int TypeID, string LongDescription, string MoreInformationURL) {
            this.CreateWindowAppAsync(APIKey, Signature, TypeID, LongDescription, MoreInformationURL, null);
        }
        
        /// <remarks/>
        public void CreateWindowAppAsync(string APIKey, string Signature, int TypeID, string LongDescription, string MoreInformationURL, object userState) {
            if ((this.CreateWindowAppOperationCompleted == null)) {
                this.CreateWindowAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWindowAppOperationCompleted);
            }
            this.InvokeAsync("CreateWindowApp", new object[] {
                        APIKey,
                        Signature,
                        TypeID,
                        LongDescription,
                        MoreInformationURL}, this.CreateWindowAppOperationCompleted, userState);
        }
        
        private void OnCreateWindowAppOperationCompleted(object arg) {
            if ((this.CreateWindowAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWindowAppCompleted(this, new CreateWindowAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateGenericApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateGenericApp(string APIKey, string ApplicationName, int ApplicationType) {
            object[] results = this.Invoke("CreateGenericApp", new object[] {
                        APIKey,
                        ApplicationName,
                        ApplicationType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGenericAppAsync(string APIKey, string ApplicationName, int ApplicationType) {
            this.CreateGenericAppAsync(APIKey, ApplicationName, ApplicationType, null);
        }
        
        /// <remarks/>
        public void CreateGenericAppAsync(string APIKey, string ApplicationName, int ApplicationType, object userState) {
            if ((this.CreateGenericAppOperationCompleted == null)) {
                this.CreateGenericAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGenericAppOperationCompleted);
            }
            this.InvokeAsync("CreateGenericApp", new object[] {
                        APIKey,
                        ApplicationName,
                        ApplicationType}, this.CreateGenericAppOperationCompleted, userState);
        }
        
        private void OnCreateGenericAppOperationCompleted(object arg) {
            if ((this.CreateGenericAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGenericAppCompleted(this, new CreateGenericAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDetailedStat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateDetailedStat(string APIKey, string StatName, long LinkedID, string StatDetailDescription, int TypeOfApplicationID, int TypeOfStat) {
            object[] results = this.Invoke("CreateDetailedStat", new object[] {
                        APIKey,
                        StatName,
                        LinkedID,
                        StatDetailDescription,
                        TypeOfApplicationID,
                        TypeOfStat});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDetailedStatAsync(string APIKey, string StatName, long LinkedID, string StatDetailDescription, int TypeOfApplicationID, int TypeOfStat) {
            this.CreateDetailedStatAsync(APIKey, StatName, LinkedID, StatDetailDescription, TypeOfApplicationID, TypeOfStat, null);
        }
        
        /// <remarks/>
        public void CreateDetailedStatAsync(string APIKey, string StatName, long LinkedID, string StatDetailDescription, int TypeOfApplicationID, int TypeOfStat, object userState) {
            if ((this.CreateDetailedStatOperationCompleted == null)) {
                this.CreateDetailedStatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDetailedStatOperationCompleted);
            }
            this.InvokeAsync("CreateDetailedStat", new object[] {
                        APIKey,
                        StatName,
                        LinkedID,
                        StatDetailDescription,
                        TypeOfApplicationID,
                        TypeOfStat}, this.CreateDetailedStatOperationCompleted, userState);
        }
        
        private void OnCreateDetailedStatOperationCompleted(object arg) {
            if ((this.CreateDetailedStatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDetailedStatCompleted(this, new CreateDetailedStatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExactStatUpdateForUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExactStatUpdateForUser(string APIKey, long UserID, long DetailedStatID, long Count, decimal Percentage, string Note) {
            object[] results = this.Invoke("ExactStatUpdateForUser", new object[] {
                        APIKey,
                        UserID,
                        DetailedStatID,
                        Count,
                        Percentage,
                        Note});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExactStatUpdateForUserAsync(string APIKey, long UserID, long DetailedStatID, long Count, decimal Percentage, string Note) {
            this.ExactStatUpdateForUserAsync(APIKey, UserID, DetailedStatID, Count, Percentage, Note, null);
        }
        
        /// <remarks/>
        public void ExactStatUpdateForUserAsync(string APIKey, long UserID, long DetailedStatID, long Count, decimal Percentage, string Note, object userState) {
            if ((this.ExactStatUpdateForUserOperationCompleted == null)) {
                this.ExactStatUpdateForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExactStatUpdateForUserOperationCompleted);
            }
            this.InvokeAsync("ExactStatUpdateForUser", new object[] {
                        APIKey,
                        UserID,
                        DetailedStatID,
                        Count,
                        Percentage,
                        Note}, this.ExactStatUpdateForUserOperationCompleted, userState);
        }
        
        private void OnExactStatUpdateForUserOperationCompleted(object arg) {
            if ((this.ExactStatUpdateForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExactStatUpdateForUserCompleted(this, new ExactStatUpdateForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IncrementStatUpdateForUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IncrementStatUpdateForUser(string APIKey, long UserID, long DetailedStatID, long Count, decimal Percentage, string Note) {
            object[] results = this.Invoke("IncrementStatUpdateForUser", new object[] {
                        APIKey,
                        UserID,
                        DetailedStatID,
                        Count,
                        Percentage,
                        Note});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementStatUpdateForUserAsync(string APIKey, long UserID, long DetailedStatID, long Count, decimal Percentage, string Note) {
            this.IncrementStatUpdateForUserAsync(APIKey, UserID, DetailedStatID, Count, Percentage, Note, null);
        }
        
        /// <remarks/>
        public void IncrementStatUpdateForUserAsync(string APIKey, long UserID, long DetailedStatID, long Count, decimal Percentage, string Note, object userState) {
            if ((this.IncrementStatUpdateForUserOperationCompleted == null)) {
                this.IncrementStatUpdateForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementStatUpdateForUserOperationCompleted);
            }
            this.InvokeAsync("IncrementStatUpdateForUser", new object[] {
                        APIKey,
                        UserID,
                        DetailedStatID,
                        Count,
                        Percentage,
                        Note}, this.IncrementStatUpdateForUserOperationCompleted, userState);
        }
        
        private void OnIncrementStatUpdateForUserOperationCompleted(object arg) {
            if ((this.IncrementStatUpdateForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementStatUpdateForUserCompleted(this, new IncrementStatUpdateForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AuthenticateUser(string APIKey, string EmailAddress, string Password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        APIKey,
                        EmailAddress,
                        Password});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string APIKey, string EmailAddress, string Password) {
            this.AuthenticateUserAsync(APIKey, EmailAddress, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string APIKey, string EmailAddress, string Password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        APIKey,
                        EmailAddress,
                        Password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTrophy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddTrophy(string APIKey, string TrophyName, string TrophyAwardConditionToShowUser, string TrophyDescription, string TriggerSQL, string TriggerReturnValue) {
            object[] results = this.Invoke("AddTrophy", new object[] {
                        APIKey,
                        TrophyName,
                        TrophyAwardConditionToShowUser,
                        TrophyDescription,
                        TriggerSQL,
                        TriggerReturnValue});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrophyAsync(string APIKey, string TrophyName, string TrophyAwardConditionToShowUser, string TrophyDescription, string TriggerSQL, string TriggerReturnValue) {
            this.AddTrophyAsync(APIKey, TrophyName, TrophyAwardConditionToShowUser, TrophyDescription, TriggerSQL, TriggerReturnValue, null);
        }
        
        /// <remarks/>
        public void AddTrophyAsync(string APIKey, string TrophyName, string TrophyAwardConditionToShowUser, string TrophyDescription, string TriggerSQL, string TriggerReturnValue, object userState) {
            if ((this.AddTrophyOperationCompleted == null)) {
                this.AddTrophyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrophyOperationCompleted);
            }
            this.InvokeAsync("AddTrophy", new object[] {
                        APIKey,
                        TrophyName,
                        TrophyAwardConditionToShowUser,
                        TrophyDescription,
                        TriggerSQL,
                        TriggerReturnValue}, this.AddTrophyOperationCompleted, userState);
        }
        
        private void OnAddTrophyOperationCompleted(object arg) {
            if ((this.AddTrophyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrophyCompleted(this, new AddTrophyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnLatestWebServiceVersionAndEndPoint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReturnLatestWebServiceVersionAndEndPoint() {
            object[] results = this.Invoke("ReturnLatestWebServiceVersionAndEndPoint", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnLatestWebServiceVersionAndEndPointAsync() {
            this.ReturnLatestWebServiceVersionAndEndPointAsync(null);
        }
        
        /// <remarks/>
        public void ReturnLatestWebServiceVersionAndEndPointAsync(object userState) {
            if ((this.ReturnLatestWebServiceVersionAndEndPointOperationCompleted == null)) {
                this.ReturnLatestWebServiceVersionAndEndPointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnLatestWebServiceVersionAndEndPointOperationCompleted);
            }
            this.InvokeAsync("ReturnLatestWebServiceVersionAndEndPoint", new object[0], this.ReturnLatestWebServiceVersionAndEndPointOperationCompleted, userState);
        }
        
        private void OnReturnLatestWebServiceVersionAndEndPointOperationCompleted(object arg) {
            if ((this.ReturnLatestWebServiceVersionAndEndPointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnLatestWebServiceVersionAndEndPointCompleted(this, new ReturnLatestWebServiceVersionAndEndPointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendUserEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendUserEmail(string APIKey, long UserID, string MessageToSend, string MessageFrom, int MessageType) {
            object[] results = this.Invoke("SendUserEmail", new object[] {
                        APIKey,
                        UserID,
                        MessageToSend,
                        MessageFrom,
                        MessageType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendUserEmailAsync(string APIKey, long UserID, string MessageToSend, string MessageFrom, int MessageType) {
            this.SendUserEmailAsync(APIKey, UserID, MessageToSend, MessageFrom, MessageType, null);
        }
        
        /// <remarks/>
        public void SendUserEmailAsync(string APIKey, long UserID, string MessageToSend, string MessageFrom, int MessageType, object userState) {
            if ((this.SendUserEmailOperationCompleted == null)) {
                this.SendUserEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUserEmailOperationCompleted);
            }
            this.InvokeAsync("SendUserEmail", new object[] {
                        APIKey,
                        UserID,
                        MessageToSend,
                        MessageFrom,
                        MessageType}, this.SendUserEmailOperationCompleted, userState);
        }
        
        private void OnSendUserEmailOperationCompleted(object arg) {
            if ((this.SendUserEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUserEmailCompleted(this, new SendUserEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendUserMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendUserMessage(string APIKey, long UserID, string MessageToSend, string MessageFrom) {
            object[] results = this.Invoke("SendUserMessage", new object[] {
                        APIKey,
                        UserID,
                        MessageToSend,
                        MessageFrom});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendUserMessageAsync(string APIKey, long UserID, string MessageToSend, string MessageFrom) {
            this.SendUserMessageAsync(APIKey, UserID, MessageToSend, MessageFrom, null);
        }
        
        /// <remarks/>
        public void SendUserMessageAsync(string APIKey, long UserID, string MessageToSend, string MessageFrom, object userState) {
            if ((this.SendUserMessageOperationCompleted == null)) {
                this.SendUserMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUserMessageOperationCompleted);
            }
            this.InvokeAsync("SendUserMessage", new object[] {
                        APIKey,
                        UserID,
                        MessageToSend,
                        MessageFrom}, this.SendUserMessageOperationCompleted, userState);
        }
        
        private void OnSendUserMessageOperationCompleted(object arg) {
            if ((this.SendUserMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUserMessageCompleted(this, new SendUserMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidateAPIKeyCompletedEventHandler(object sender, ValidateAPIKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAPIKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAPIKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateWindowAppCompletedEventHandler(object sender, CreateWindowAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWindowAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWindowAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateGenericAppCompletedEventHandler(object sender, CreateGenericAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGenericAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGenericAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDetailedStatCompletedEventHandler(object sender, CreateDetailedStatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDetailedStatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDetailedStatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExactStatUpdateForUserCompletedEventHandler(object sender, ExactStatUpdateForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExactStatUpdateForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExactStatUpdateForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IncrementStatUpdateForUserCompletedEventHandler(object sender, IncrementStatUpdateForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementStatUpdateForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementStatUpdateForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddTrophyCompletedEventHandler(object sender, AddTrophyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrophyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrophyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnLatestWebServiceVersionAndEndPointCompletedEventHandler(object sender, ReturnLatestWebServiceVersionAndEndPointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnLatestWebServiceVersionAndEndPointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnLatestWebServiceVersionAndEndPointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendUserEmailCompletedEventHandler(object sender, SendUserEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendUserEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendUserEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendUserMessageCompletedEventHandler(object sender, SendUserMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendUserMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendUserMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591